$date
	Wed Nov 10 20:15:13 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_parameterized_merger $end
$var wire 1 ! f1 $end
$var wire 1 " f0 $end
$var wire 32 # c [31:0] $end
$var reg 32 $ c0 [31:0] $end
$var reg 32 % c1 [31:0] $end
$var reg 32 & c2 [31:0] $end
$var reg 32 ' c3 [31:0] $end
$var reg 1 ( clk $end
$var reg 1 ) rst $end
$var reg 1 * sel $end
$scope module dut $end
$var wire 1 ( clock $end
$var wire 64 + coord_in [63:0] $end
$var wire 1 ) reset $end
$var wire 1 * selected $end
$var wire 3 , fetch_wires [2:0] $end
$var wire 96 - coord_wires [95:0] $end
$var reg 32 . coord [31:0] $end
$var reg 2 / fetch_next [1:0] $end
$scope begin genblk1[0] $end
$scope module merger_tree_node $end
$var wire 1 ( clock $end
$var wire 64 0 coord_in [63:0] $end
$var wire 1 1 fetch_next_from_0 $end
$var wire 1 2 fetch_next_from_1 $end
$var wire 1 ) reset $end
$var wire 1 3 selected $end
$var wire 2 4 fetch_next [1:0] $end
$var wire 32 5 coord_1 [31:0] $end
$var wire 32 6 coord_0 [31:0] $end
$var wire 32 7 coord [31:0] $end
$var wire 1 8 comparison $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x8
bx 7
bx 6
bx 5
bx 4
13
x2
x1
bx 0
bx /
bx .
bx -
bx1 ,
bx +
1*
1)
0(
bx '
bx &
bx %
bx $
bx #
x"
x!
$end
#5000
0"
0!
b0 /
b0 #
b0 .
1(
#10000
0(
#15000
1(
#20000
0(
#25000
1(
#30000
0(
#35000
1(
#40000
0(
#45000
1(
#50000
0(
#55000
1(
#60000
0(
#65000
1(
#70000
0(
#75000
1(
#80000
0(
#85000
1(
#90000
0(
#95000
1(
#100000
12
b101 ,
b10 4
01
b10 7
08
b11 6
b10 5
b1000000000000000000000000000000011 0
0(
b101 '
b100 &
b10 %
b100000000000000000000000000000001100000000000000000000000000000010 -
b1000000000000000000000000000000011 +
b11 $
0)
#105000
1!
b10 /
b10 #
b10 .
1(
#110000
0(
#115000
1(
#120000
0(
#125000
1(
#130000
0(
#135000
1(
#140000
0(
#145000
1(
#150000
0(
#155000
1(
#160000
0(
#165000
1(
#170000
0(
#175000
1(
#180000
0(
#185000
1(
#190000
0(
#195000
1(
#200000
b0 4
02
03
0(
b0 ,
0*
#205000
0!
b0 /
1(
#210000
0(
#215000
1(
#220000
0(
#225000
1(
#230000
0(
#235000
1(
#240000
0(
#245000
1(
#250000
0(
#255000
1(
#260000
0(
#265000
1(
#270000
0(
#275000
1(
#280000
0(
#285000
1(
#290000
0(
#295000
1(
#300000
11
18
b10 6
b11 5
b1 4
02
b1100000000000000000000000000000010 0
13
0(
b11 %
b110000000000000000000000000000001000000000000000000000000000000010 -
b1100000000000000000000000000000010 +
b10 $
b11 ,
1*
#305000
1"
b1 /
1(
#310000
0(
#315000
1(
#320000
0(
#325000
1(
#330000
0(
#335000
1(
#340000
0(
#345000
1(
#350000
0(
#355000
1(
#360000
0(
#365000
1(
#370000
0(
#375000
1(
#380000
0(
#385000
1(
#390000
0(
#395000
1(
#400000
b0 4
01
03
0(
b0 ,
0*
#405000
0"
b0 /
1(
#410000
0(
#415000
1(
#420000
0(
#425000
1(
#430000
0(
#435000
1(
#440000
0(
#445000
1(
#450000
0(
#455000
1(
#460000
0(
#465000
1(
#470000
0(
#475000
1(
#480000
0(
#485000
1(
#490000
0(
#495000
1(
#500000
12
b11 7
08
b100 6
b10 4
01
b1100000000000000000000000000000100 0
13
0(
b10 &
b110000000000000000000000000000010000000000000000000000000000000011 -
b1100000000000000000000000000000100 +
b100 $
b101 ,
1*
#505000
1!
b10 /
b11 #
b11 .
1(
#510000
0(
#515000
1(
#520000
0(
#525000
1(
#530000
0(
#535000
1(
#540000
0(
#545000
1(
#550000
0(
#555000
1(
#560000
0(
#565000
1(
#570000
0(
#575000
1(
#580000
0(
#585000
1(
#590000
0(
#595000
1(
#600000
b0 4
02
03
0(
b0 ,
0*
#605000
0!
b0 /
1(
#610000
0(
#615000
1(
#620000
0(
#625000
1(
#630000
0(
#635000
1(
#640000
0(
#645000
1(
#650000
0(
#655000
1(
#660000
0(
#665000
1(
#670000
0(
#675000
1(
#680000
0(
#685000
1(
#690000
0(
#695000
1(
#700000
b10 4
12
13
0(
b10 '
b101 &
b101 ,
1*
#705000
1!
b10 /
1(
#710000
0(
#715000
1(
#720000
0(
#725000
1(
#730000
0(
#735000
1(
#740000
0(
#745000
1(
#750000
0(
#755000
1(
#760000
0(
#765000
1(
#770000
0(
#775000
1(
#780000
0(
#785000
1(
#790000
0(
#795000
1(
#800000
b0 4
02
03
0(
b0 ,
0*
#805000
0!
b0 /
1(
#810000
0(
#815000
1(
#820000
0(
#825000
1(
#830000
0(
#835000
1(
#840000
0(
#845000
1(
#850000
0(
#855000
1(
#860000
0(
#865000
1(
#870000
0(
#875000
1(
#880000
0(
#885000
1(
#890000
0(
#895000
1(
#900000
$dumpoff
x8
bx 7
bx 6
bx 5
bx 4
x3
x2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
x)
x(
bx '
bx &
bx %
bx $
bx #
x"
x!
$end
